version: '3.1'

networks:
  digital_network:
    driver: bridge

services:
  dspine-nginx:
    image: nginx:latest
    container_name: dspine-nginx
    restart: always
    ports:
      - "${NGINX_HTTP_PORT}:80"
    networks:
      - digital_network
    volumes:
      - ${NGINX_CONF_PATH}/default.conf:/etc/nginx/conf.d/default.conf
      - ${NGINX_LOG_PATH}/error.log:/var/log/nginx/error.log
      - ${NGINX_LOG_PATH}/access.log:/var/log/nginx/access.log
    depends_on:
      - dspine-application
  dspine-application:
    build: .
    networks:
      - digital_network
    volumes:
        - ./docker/scripts:/usr/dspine/scripts
        - .:/usr/dspine/app
        - /usr/dspine/app/node_modules
    working_dir: /usr/dspine/app
    command: sh -c "chmod +x /usr/dspine/scripts/init.sh && /usr/dspine/scripts/init.sh"
    depends_on:
        - dspine-postgres
        - dspine-redis
  dspine-redis:
    image: redis:latest
    container_name: dspine-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASS}
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    networks:
      - digital_network
  dspine-postgres:
    image: postgres:14
    container_name: dspine-postgres
    restart: always
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    networks:
      - digital_network
    volumes:
      - ./docker/postgres-volume/dspine:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
